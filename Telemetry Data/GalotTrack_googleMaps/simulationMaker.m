%%  Gerry Chen
%   simulationMaker.m - helps make simulations

clear;
% figure(1);clf;
% figure(2);clf;
% figure(3);clf;
% figure(4);clf;
% load OnlineElevation.mat
% 
% x = d;
% m = 19+43; % approx
% g = 9.81;
% h = smooth(elevation,10);
% % v = 6.7 - (h-mean(h));
% dx = gradient(x);
% dt = dx./v;
% t = cumsum(dt);
global a b Pgen leakage
a = -23.1; b = 388;
Pgen = @(V) a*V+b;
leakage = 0.000013;
t = linspace(0,300,600);
t = [t,t+300,t+600];
dt = gradient(t);

% Vi = 15.7;
Etot = 23*300;
Pmax = 100;
motorOnTime = Etot/Pmax;
tstarts = [0,30,100];
Pmotor = (Pmax+100*rand(size(t))-50).*any(...
    ((mod(t,300)-tstarts')>0) &...
    ((mod(t,300)-tstarts')<(motorOnTime/length(tstarts)))...
    );
Vi = fminsearch(@(Vi) -optimSim(t,dt,Vi,Pmotor),16)

[V,PFC] = simulateV(t,dt,Vi,Pmotor);

I = PFC./V;
H2flow = I/1.6021766e-19 / 6.023e23 * 1.01 * 20 + leakage;
eff = PFC ./ (H2flow * 119.9e3);

%% plots
figure(1);
subplot(2,1,1);
plot(t,eff,'k--');
grid on
ylim([.5,.7])
xlabel('time (s)')
ylabel('efficiency')
title(sprintf('efficiency vs time (at %.1fW)',mean(PFC)));
subplot(2,1,2)
yyaxis left
plot(t,H2flow);
ylabel('H2 flow (g/s)')
ylim([0,5e-4])
yyaxis right
plot(t,V);
ylabel('voltage (V)');
xlabel('time (s)');
ylim([14,17])
title('voltage and H2 flow');

% figure 2
figure(2);
plot(t,PFC);
ylabel('FC power')

% figure 3
figure(3);
Plims = xlim;
Pplot3 = linspace(Plims(1),Plims(2));
Vplot3 = (Pplot3-b)/a;
Iplot3 = Pplot3./Vplot3;
H2flowplot3 = Iplot3/1.6021766e-19 / 6.023e23 * 1.01 * 20 + leakage;
effplot3 = Pplot3 ./ (H2flowplot3 * 119.9e3);
plot(Pplot3,effplot3);

% figure 4
figure(4);clf;
plot(t,Pmotor,'b-');hold on
plot(t,PFC,'r-');
xlabel('t');ylabel('Power');legend('motor','FC');

fprintf('total energy generated by FC: %.2f\n',trapz(t,PFC))
avgEff = trapz(t,PFC) / (trapz(t,H2flow)*119.9e3);
fprintf('average efficiency (theo): %.4f\n',avgEff);

t = t(1:1:end); P = PFC(1:1:end);
% save('/Users/Gerry/GIT_REPOS/DEV_H2_DAQ/simulationProfiles/Galot_basic2_noisy','t','P')

function [V,PFC] = simulateV(t,dt,Vi,Pmotor)
    global Pgen
    C = 200;

    V = zeros(size(t));
    PFC = zeros(size(t));
    V(1) = Vi;
    for i = 1:(length(t)-1)
        PFCon = (V(i)<Vi);
        PFC(i) = Pgen(V(i))*PFCon;
        V(i+1) = V(i) + (PFC(i)-Pmotor(i))/V(i)/C * dt(i);
    end
end

function [avgEff] = optimSim(t,dt,Vi,Pmotor)
    global leakage
    [V,PFC] = simulateV(t,dt,Vi,Pmotor);
    I = PFC./V;
    H2flow = I/1.6021766e-19 / 6.023e23 * 1.01 * 20 + leakage*(PFC>0);
    avgEff = trapz(t,PFC) / (trapz(t,H2flow)*119.9e3);
    if (V(end)<V(1))
        avgEff = avgEff/3; % penalty
    end
end